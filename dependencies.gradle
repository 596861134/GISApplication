//配置各个module共用的参数
apply plugin: 'kotlin-android'
apply plugin: 'kotlin-parcelize'
apply plugin: 'kotlin-kapt'//kotlin语言使用注入框架，dataBinding都需要这个
apply plugin: 'androidx.navigation.safeargs.kotlin'//用于navigation传参的时候一种安全防护,非空，类型判断等。

android {
    compileSdk compile_sdk_version
//    buildToolsVersion build_tools_version

    defaultConfig {
        minSdk min_sdk_verion
        targetSdk target_sdk_version

        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        // 混淆配置
        proguardFiles 'proguard-sdk.pro', 'proguard-app.pro'

        multiDexEnabled true

        ndk {
            abiFilters 'armeabi-v7a'
        }

        // 是否线上环境
        buildConfigField('boolean', 'IS_RELEASE_PACKAGE', '' + IS_RELEASE_PACKAGE + '')
        // 日志打印开关
        buildConfigField('boolean', 'LOG_ENABLE', '' + LOG_ENABLE + '')
        // log tag
        buildConfigField('String', 'LOG_TAG', '"' + 'CZF_TAG' + '"')
        // 服务器的主机地址
        buildConfigField('String', 'HOST_URL', '"' + HOST_URL + '"')
        // 编译环境
        buildConfigField('String', 'serverType', '"' + serverType + '"')
    }

    signingConfigs {
        debug {
            storeFile file(StoreFile)
            storePassword StorePassword
            keyAlias KeyAlias
            keyPassword KeyPassword
            v1SigningEnabled true
            v2SigningEnabled true
        }

        release {
            storeFile file(StoreFile)
            storePassword StorePassword
            keyAlias KeyAlias
            keyPassword KeyPassword
            v1SigningEnabled true
            v2SigningEnabled true
        }
    }

    // Android Gradle使用总结: https://blog.51cto.com/zhaoyanjun/3815153
    /**
     * 编译环境
     */
    buildTypes {
        debug {
            // 调试模式开关
            jniDebuggable true
            // 压缩对齐开关
            zipAlignEnabled false
            // 移除无用的资源
//            shrinkResources false
            // 代码混淆开关
            minifyEnabled false
            // 签名信息配置
            signingConfig signingConfigs.debug
            // 调试模式下只保留一种架构的 so 库，提升打包速度
            ndk {
                abiFilters 'armeabi-v7a'
            }
        }

        preview.initWith(debug)
        preview {
        }

        release {
            // 调试模式开关
            jniDebuggable false
            // 压缩对齐开关
            zipAlignEnabled true
            // 移除无用的资源
//            shrinkResources true
            // 代码混淆开关
            minifyEnabled true
            // 签名信息配置
            signingConfig signingConfigs.release
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    buildFeatures {
        dataBinding = true
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_1_8
        targetCompatibility JavaVersion.VERSION_1_8
    }
    //使用jetPack的组件，会要求jdk 1.8最好，有的时候会遇到报错，需要配置如下，避免target jvm 1.8的那个报错
    kotlinOptions {
        jvmTarget = "1.8"
    }

    // 设置存放 so 文件的目录
    sourceSets {
        main {
            jniLibs.srcDirs = ['libs']
        }
    }

    /**
     * 忽略警告
     */
    lint {
        abortOnError false
        checkAllWarnings false
        checkReleaseBuilds false
        ignoreWarnings true
        quiet true
    }

    packagingOptions {
        jniLibs {
            keepDebugSymbols += ['*/x86/*.so', '*/armeabi/*.so', '*/armeabi-v7a/*.so']
            excludes += ['META-INF/*******']
        }
        resources {
            excludes += [
                    'META-INF/*******'
//                    'META-INF/ASL2.0',
//                    'META-INF/com.android.tools/proguard/coroutines.pro',
//                    'META-INF/parcelize-runtime.kotlin_module',
//                    'META-INF/DEPENDENCIES.txt',
//                    'META-INF/LICENSE.txt',
//                    'META-INF/NOTICE.txt',
//                    'META-INF/NOTICE',
//                    'META-INF/LICENSE',
//                    'META-INF/DEPENDENCIES'
            ]
        }
    }
}

/**
 * 关闭所有警告
 */
afterEvaluate {
    tasks.withType(JavaCompile) {
        // Try to turn them all off automatically
        options.compilerArgs << '-Xlint:none'
        options.compilerArgs << '-nowarn' // same as '-Xlint:none'

        // Turn them off manually
        options.compilerArgs << '-Xlint:-auxiliaryclass'
        options.compilerArgs << '-Xlint:-cast'
        options.compilerArgs << '-Xlint:-classfile'
        options.compilerArgs << '-Xlint:-deprecation'
        options.compilerArgs << '-Xlint:-dep-ann'
        options.compilerArgs << '-Xlint:-divzero'
        options.compilerArgs << '-Xlint:-empty'
        options.compilerArgs << '-Xlint:-fallthrough'
        options.compilerArgs << '-Xlint:-finally'
        options.compilerArgs << '-Xlint:-options'
        options.compilerArgs << '-Xlint:-overloads'
        options.compilerArgs << '-Xlint:-overrides'
        options.compilerArgs << '-Xlint:-path'
        options.compilerArgs << '-Xlint:-processing'
        options.compilerArgs << '-Xlint:-rawtypes'
        options.compilerArgs << '-Xlint:-serial'
        options.compilerArgs << '-Xlint:-static'
        options.compilerArgs << '-Xlint:-try'
        options.compilerArgs << '-Xlint:-unchecked'
        options.compilerArgs << '-Xlint:-varargs'
    }
}

// 添加构建依赖项：https://developer.android.google.cn/studio/build/dependencies
// api 与 implementation 的区别：https://www.jianshu.com/p/8962d6ba936e
dependencies {
    implementation fileTree(include: ['*.jar'], dir: 'libs')

    // 平台相关的基础库
    implementation "org.jetbrains.kotlin:kotlin-stdlib:$kotlin_version"
    implementation "org.jetbrains.kotlin:kotlin-stdlib-jdk8:$kotlin_version"
    implementation "androidx.concurrent:concurrent-futures-ktx:1.1.0"
    implementation "androidx.appcompat:appcompat:1.6.1"
    implementation "androidx.core:core-ktx:1.10.0"
    implementation "androidx.fragment:fragment-ktx:1.5.7"
    implementation "androidx.activity:activity-ktx:1.7.1"
    implementation "androidx.constraintlayout:constraintlayout:2.1.4"
    implementation 'androidx.annotation:annotation:1.6.0'
    implementation 'androidx.multidex:multidex:2.0.1'

    implementation "com.google.android.material:material:1.8.0"
    implementation "androidx.viewpager2:viewpager2:1.0.0"
    implementation "androidx.recyclerview:recyclerview:1.3.0"
    implementation "androidx.swiperefreshlayout:swiperefreshlayout:1.1.0"

    // lifecycle
    implementation "androidx.lifecycle:lifecycle-livedata-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-runtime-ktx:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-viewmodel-savedstate:$lifecycle_version"
    implementation "androidx.lifecycle:lifecycle-common-java8:$lifecycle_version"

    //room
    implementation "androidx.room:room-runtime:$room_version"
    kapt "androidx.room:room-compiler:$room_version"
    // optional - Kotlin Extensions and Coroutines support for Room
    implementation "androidx.room:room-ktx:$room_version"
    // optional - Test helpers
    testImplementation "androidx.room:room-testing:$room_version"

    //注意配置navigation版本号的时候，project下的build.gradle的class path也需要同步navigation的版本号配置
    implementation "androidx.navigation:navigation-ui:$navigation_version"
    implementation "androidx.navigation:navigation-ui-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-fragment:$navigation_version"
    implementation "androidx.navigation:navigation-fragment-ktx:$navigation_version"
    implementation "androidx.navigation:navigation-runtime:$navigation_version"

    // gson
    implementation "com.google.code.gson:gson:2.10.1"

    //glide : https://github.com/bumptech/glide
    api "com.github.bumptech.glide:glide:4.15.1"
    kapt "com.github.bumptech.glide:compiler:4.15.1"

    //okhttp3 :  https://github.com/square/okhttp
    implementation "com.squareup.okhttp3:okhttp:4.10.0"
    implementation "com.squareup.okhttp3:logging-interceptor:4.10.0"

    //retrofit  https://github.com/square/retrofit
    implementation "com.squareup.retrofit2:retrofit:2.9.0"
    implementation "com.squareup.retrofit2:adapter-rxjava3:2.9.0"
    implementation "com.squareup.retrofit2:converter-gson:2.9.0"

    //rxjava3 :  https://github.com/ReactiveX/RxJava
    implementation "io.reactivex.rxjava3:rxjava:3.1.6"
    implementation "io.reactivex.rxjava3:rxandroid:3.0.2"

    // 第三方库

    //utils  https://github.com/Blankj/AndroidUtilCode
    // https://github.com/Blankj/AndroidUtilCode/blob/master/lib/utilcode/README-CN.md
    implementation "com.blankj:utilcodex:1.31.1"

    // https://github.com/JessYanCoding/RetrofitUrlManager
    implementation "me.jessyan:retrofit-url-manager:1.4.0"

    // BaseRecyclerViewAdapterHelper https://github.com/CymChad/BaseRecyclerViewAdapterHelper/wiki
    implementation "io.github.cymchad:BaseRecyclerViewAdapterHelper:4.0.0-beta04"

    // dslTablayout
    // 链接：https://github.com/angcyo/DslTabLayout
    // 文档：https://angcyo.gitee.io/doc/tablayout/
    implementation "com.github.angcyo.DslTablayout:TabLayout:3.5.3"
    //可选
    implementation "com.github.angcyo.DslTablayout:ViewPager1Delegate:3.5.3"
    //可选
    implementation "com.github.angcyo.DslTablayout:ViewPager2Delegate:3.5.3"

    //时间转换框架 https://github.com/dlew/joda-time-android
    implementation "net.danlew:android.joda:2.12.5"

    // banner https://github.com/youth5201314/banner
//    implementation "com.youth.banner:banner:2.2.2"

    // https://github.com/Tencent/MMKV
    implementation "com.tencent:mmkv:1.2.15"

    // 吐司框架：https://github.com/getActivity/Toaster
    implementation "com.github.getActivity:Toaster:12.2"

    // 权限请求框架：https://github.com/getActivity/XXPermissions
    implementation "com.github.getActivity:XXPermissions:18.0"

    // Shape 框架：https://github.com/getActivity/ShapeView
    implementation "com.github.getActivity:ShapeView:8.5"

    // https://github.com/JessYanCoding/AndroidAutoSize
    implementation "com.github.JessYanCoding:AndroidAutoSize:v1.2.1"

    // https://github.com/gyf-dev/ImmersionBar
    implementation "com.geyifeng.immersionbar:immersionbar:3.2.2"

    // PictureSelector 基础 (必须) https://github.com/LuckSiege/PictureSelector
    implementation 'io.github.lucksiege:pictureselector:v3.11.0'
    // 图片压缩 (按需引入)
    implementation 'io.github.lucksiege:compress:v3.10.9'
    // 图片裁剪 (按需引入)
    implementation 'io.github.lucksiege:ucrop:v3.10.9'
    // 自定义相机 (按需引入)
    implementation 'io.github.lucksiege:camerax:v3.10.9'

    // core  https://github.com/lingochamp/okdownload
    implementation "com.liulishuo.okdownload:okdownload:$okdownload_version"
    // 提供sqlite来存储断点
    implementation "com.liulishuo.okdownload:sqlite:$okdownload_version"
    // 提供okhttp连接到后端,然后请自行导入okhttp依赖项
    implementation "com.liulishuo.okdownload:okhttp:$okdownload_version"
    // 提供与文件下载器匹配的接口
    implementation "com.liulishuo.okdownload:filedownloader:$okdownload_version"
    // 为kotlin扩展提供接口
    implementation "com.liulishuo.okdownload:ktx:$okdownload_version"

    // AOP 插件库：https://mvnrepository.com/artifact/org.aspectj/aspectjrt
    // AGP 7.1.3后已失效，保留引用是不想删代码
    implementation 'org.aspectj:aspectjrt:1.9.6'

    // 上拉刷新下拉加载框架： https://github.com/scwang90/SmartRefreshLayout
    implementation 'com.scwang.smart:refresh-layout-kernel:2.0.3'
    implementation 'com.scwang.smart:refresh-header-material:2.0.3'

    // https://docs.mapbox.com/android/maps/guides/install/
    implementation ('com.mapbox.maps:android:10.12.1'){
        // 排除mapbox自己引用的okhttp3
        exclude group: 'com.squareup.okhttp3', module: 'okhttp'
    }

    // 多渠道打包：https://github.com/Tencent/VasDolly
    implementation 'com.tencent.vasdolly:helper:3.0.6'

    testImplementation "junit:junit:4.13.2"
    androidTestImplementation "androidx.test.ext:junit:1.1.5"
    androidTestImplementation "androidx.test.espresso:espresso-core:3.5.1"

    // 多语种：https://github.com/getActivity/MultiLanguages
    // 悬浮窗：https://github.com/getActivity/XToast
    // 日志输出：https://github.com/getActivity/Logcat
    // 工具类：https://github.com/Blankj/AndroidUtilCode
    // 轮播图：https://github.com/bingoogolapple/BGABanner-Android
    // 二维码：https://github.com/bingoogolapple/BGAQRCode-Android
    // 跑马灯：https://github.com/sunfusheng/MarqueeView
    // 对象注解：https://www.jianshu.com/p/f1f888e4a35f
    // 对象存储：https://github.com/leavesC/DoKV
    // 多渠道打包：https://github.com/Meituan-Dianping/walle
    // 设备唯一标识：http://msa-alliance.cn/col.jsp?id=120
    // 嵌套滚动容器：https://github.com/donkingliang/ConsecutiveScroller
    // 手势缩放 ImageView：https://github.com/Baseflow/PhotoView
    // 隐私调用监控：https://github.com/huage2580/PermissionMonitor
    // 动画解析库：https://github.com/airbnb/lottie-android
    // 动画资源：https://lottiefiles.com、https://icons8.com/animated-icons

}
