ext {
    kotlin_version = '1.9.23'

    //  大版本务必选择与项目的 Kotlin 版本一致的 KSP 版本
    // https://github.com/google/ksp/releases
    ksp_version = '1.9.23-1.0.19'

    /** Android Gradle API 版本 */
    agp_version = '8.1.4'

    /** 当xml中没有代码提示时把版本改成32 */
    /** compileSdkVersion>=targetSdkVersion>minSdkVersion */
    /** 编译APP 时使用的 Android API 版本 */
    compile_sdk_version = 34
//    build_tools_version = '33.0.2'
    /** 应用程序支持的最低 API 版本 */
    min_sdk_verion = 21
    /** 目标版本 */
    target_sdk_version = 32

    lifecycle_version = "2.7.0"
    navigation_version = "2.7.7"
    room_version = "2.6.1"

    glide_version = "4.16.0"
    okhttp_version = "4.12.0"
    retrofit_version = "2.9.0"

    okdownload_version = "1.0.7"
    vasdolly_version = "3.0.6"
    picture_version = "v3.11.2"
    dslTab_version = "3.5.5"

    /**编译环境*/
    // 测试服
    def SERVER_TYPE_DEBUG = "debug"
    // 预发布服
    def SERVER_TYPE_PREVIEW = "preview"
    // 正式服
    def SERVER_TYPE_RELEASE = "release"
    /**编译环境*/

    // 任务名称，类似：app:assembleDebug、app:assemblePreview、app:assembleRelease
    def taskName = project.gradle.startParameter.taskNames[0]
    if (taskName == null) {
        taskName = ""
    }
    // 打印当前执行的任务名称
    println "GradleLog TaskNameOutput " + taskName

//    def serverType = SERVER_TYPE_RELEASE

    // 匹配执行的任务名称来配置对应的编译环境
    if (taskName.endsWith("Debug")) {
        serverType = SERVER_TYPE_DEBUG
    } else if (taskName.endsWith("Preview")) {
        serverType = SERVER_TYPE_PREVIEW
    }else {
        serverType = SERVER_TYPE_RELEASE
    }

    // 从 Gradle 命令中读取参数配置，例如：./gradlew assembleRelease -P ServerType="test"
    // 如果gradle.properties中配置的有ServerType，则配置环境从ServerType读取
    if (project.hasProperty("ServerType")) {
        serverType = project.properties["ServerType"]
    }

    // 打印当前服务器配置
    println "GradleLog ServerTypeOutput " + serverType

    // 根据编译环境配置HOST_URL等环境变量
    switch(serverType) {
        case SERVER_TYPE_DEBUG:
        case SERVER_TYPE_PREVIEW:
            LOG_ENABLE = true
            // 不同环境的key 可以在这里配 如：BUGLY_ID = "测试 AppID"
            if (serverType == SERVER_TYPE_PREVIEW) {
                HOST_URL = "https://www.wanandroid.com/prerelease/"
            } else {
                HOST_URL = "https://www.wanandroid.com/debug/"
            }
            break
        case SERVER_TYPE_RELEASE:
            LOG_ENABLE = !IS_RELEASE_PACKAGE
            // 不同环境的key 可以在这里配 如：BUGLY_ID = "正式 AppID"
            HOST_URL = "https://www.wanandroid.com/release/"
            break
        default :
            break
    }
}